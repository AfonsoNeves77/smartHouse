@@startuml
        title <size: 30> US06 Class Diagram

 note "<b>Only methods related to\n<b>US06 are represented" as N1
 skinparam linetype ortho


 class GetListOfDevicesCTRL {
 - deviceServe : DeviceService
 - roomService : RoomService

 + getListOfDevices(deviceDTOMapper : DeviceDTOMapper , roomDTO : RoomDTO) : List<DeviceDTO>
 }


 class RoomService <<Service>>{
 - roomRepository : RoomRepository
 - roomFactory : RoomFactory

 + isPresent(roomIDVO : RoomIDVO) : boolean
 }


 class RoomRepository <<Repository>>{
 - DATA : Map<RoomIDVO, Room>

 + isPresent(roomIDVO : RoomIDVO) : boolean
 }


 class RoomMapper{
 + getRoomDTOList(clonedListOfRooms : List<Room>) : List<RoomDTO>
 + domainToDTO(room : Room) : RoomDTO
 + getID(roomDTO : roomDTO) : RoomIDVO
 }

 class RoomDTO{
 - roomID : String
 - roomName :String
 - houseFloor : int
 - roomWidth : double
 - roomLength : double
 }


 class RoomIDVO {
 - identifier : UUID
 }

 class DeviceService <<Service>>{
 - deviceRepository : DeviceRepository
 - deviceFactory : DeviceFactory

 + findByRoomID(roomIDVO : RoomIDVO) : List<Device>
 }

 class DeviceRepository <<Repository>>{
 - DATA : Map<DeviceIDVO, Device>

 + findByRoomID(roomID : RoomIDVO) : List<Device>
 }

 class DeviceMapper {
 + domainToDTO(clonedListOfDevices : List<Device>) : List<DeviceDTO>
}

 interface Repository{
 + findById(id : ID) : T
 + isPresent(id : ID) : boolean
 }

 GetListOfDevicesCTRL --left> RoomService : <<uses>>
 RoomService --> RoomRepository : <<uses>>

 GetListOfDevicesCTRL --> RoomMapper : <<uses>>
 RoomMapper --> RoomDTO : <<uses>>
 RoomDTO --> RoomIDVO : <<creates>>

 GetListOfDevicesCTRL --right> DeviceService : <<uses>>
 DeviceService --> DeviceRepository : <<uses>>

 GetListOfDevicesCTRL --> DeviceMapper : <<uses>>

 Repository <|....up RoomRepository : <<implements>>
 Repository <|....up DeviceRepository : <<implements>>

 @enduml