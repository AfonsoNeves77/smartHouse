@startuml

title User Story 12 - Main Success Scenario
autonumber
!theme cerulean

participant ":AddActuatorToDeviceCTRL" as C
participant ":CommonListOfRooms" as CU
participant ":RoomDTOMapper" as RDM
participant ":CommonListOfDevices" as CD
participant ":DeviceDTOMapper" as DDM
participant "device:Device" as D
participant ":listOfActuators" as LA
participant "actuatorCatalogue" as AC
participant "actuator:Actuator" as A



[o-> C : getListOfRooms()
activate C
C -> CU : getListOfRooms()
activate CU
CU -> CU : refreshMap()
activate CU
deactivate CU
CU -> CU : truncateList(roomDTOAndRoomMap)
activate CU
deactivate CU
CU --> C : roomDtoList
deactivate CU
[o<-- C : roomDtoList
deactivate C
[o-> C : getListOfDevices(roomName)
activate C
C -> CU: getRoomByName(roomName)
activate CU
CU -> CU : refreshMap()
activate CU
deactivate CU
CU --> C : room
deactivate CU
C -> CD : getListOfDevices(room)
activate CD
CD -> CD : refreshMap(room)
activate CD
deactivate CD
CD -> CD : truncateList(deviceDTOAndDeviceMap)
activate CD
deactivate CD
CD --> C : dtoDeviceList
deactivate CD
[o<-- C : dtoDeviceList
deactivate C

[o->C : addActuatorToDevice(actuatorName,actuatorType, deviceName, simHardware)
activate C
C -> C : refreshMap(room)
activate C
deactivate C
C -> D : addActuator(actuatorName, actuatorType, catalogue,simHardwareAct)
D -> LA : addActuator(actuatorName,actuatorType, catalogue, simHardwareAct)
activate LA
LA -> LA : isActuatorInList(actuatorName)
activate LA
deactivate LA
LA -> LA : findActuator(actuatorName)
LA -> AC : createActuator(actuatorName, actuatorType, simHardwareAct)
activate AC
AC -> A** : <create Actuator>
activate A
AC --> LA : newActuator
deactivate AC
LA -> LA : add(newActuator)
activate LA
deactivate LA
LA --> C : return true
deactivate LA
[o<-- C : return true
deactivate C
@enduml