@startuml
title <size: 30> US08 Class Diagram
skinparam linetype ortho


class DeactivateDeviceCTRL {
    - roomRepo : RoomRepository
    - deviceRepo : DeviceRepository
    - houseRepo : HouseRepository
    - houseID : HouseID
    + DeactivateDeviceCTRL(roomRepo : RoomRepository, deviceRepo : DeviceRepository, houseRepo : HouseRepository)
    + getListOfRooms() : List<RoomDTO>
    + getListOfDevices(roomDTO : RoomDTO) : List<DeviceDTO>
    + deactivateDevice(deviceDTO : DeviceDTO) : boolean
}



interface Repository<T> {
    + findAll() : List<T>
    + findAllByID(domainId : DomainID) : List<T>
    + containsID(domainId : DomainID) : boolean
    + save(ent : T) : boolean
}

class HouseRepository {
    + getHouse() : House
    + getHouseID() : HouseID
}

class DeviceRepository {
     - deviceIdAndDeviceMap : Map<DeviceID,Device>
     + findAll() : List<Device>
     + findAllByID(roomId : RoomID) : List<Device>
     + containsID(deviceID : DeviceID) : boolean
     + save(device : Device) : boolean
}

class RoomRepository {
     - roomIdAndRoomMap : Map<RoomID,Room>
     + findAll() : List<Room>
     + findAllByID(houseID : HouseID) : List<Room>
     + containsID(roomId : RoomID) : boolean
     + save(room : Room) : boolean
}


class Device {
   - deviceID : DeviceID
   - roomID : RoomID
   - deviceName : DeviceName
   - model : DeviceModel
   - deviceState : DeviceState
   + Device(roomID : RoomID, deviceName : DeviceName, model : Model, roomDimensions : RoomDimensions)
   + deactivateDevice(deviceState : DeviceState) : boolean
}

class RoomID {
    + RoomID(identifier : String)
}

class DeviceState {
    - stateDescription : String
    + DeviceState(String stateDescription)
}


class DeviceName {
    - name : String
    + DeviceName(String name)
}


class DeviceModel {
    - modelDescription : String
    + DeviceModel(String modelDescription)
}


class DeviceID {
    + DeviceID(identifier : String)
}


class RoomDTOMapper {
    + getRoomDTOList(listOfRooms : List<Room>) : List<RoomDTO>
    + domainToDTO(room : Room) : RoomDTO
    + getRoomDTOID(roomDTO : RoomDTO) : RoomID
}

class DeviceDTOMapper {
    + domainToDTO(device : Device) : DeviceDTO
    + getDeviceDTOList(listOfDevices : List<Device>) : List<DeviceDTO>
    + getDeviceDTOID(deviceDTO : DeviceDTO) : DeviceID
}

class DomainID {

}




interface AggregateRoot {
}



DeactivateDeviceCTRL ..up> RoomRepository
DeactivateDeviceCTRL ..right> DeviceRepository
DeactivateDeviceCTRL ..up> HouseRepository
DeactivateDeviceCTRL ..left> RoomDTOMapper
DeactivateDeviceCTRL ..down> DeviceDTOMapper

DomainID <|..up RoomID
DomainID <|..down DeviceID


DeviceRepository --o Device

Device o-- DeviceState
Device o-- RoomID
Device o-- DeviceName
Device o-- DeviceModel
Device *-- DeviceID

Device ..left|> AggregateRoot


Repository <|.. RoomRepository
Repository <|.. DeviceRepository

@enduml