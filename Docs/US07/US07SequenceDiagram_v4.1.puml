@startuml
skinparam ParticipantPadding 50
    title User Story 7: Main Success Scenario
    autonumber

participant ":AddSensorToDeviceCTRL" as C
participant ":SensorTypeService" as STS
participant ":SensorTypeRepository" as STR
participant ":DeviceMapper" as DM
participant ":DeviceService" as DS
participant ":DeviceRepository" as DR
participant ":SensorMapper" as SM
participant ":SensorTypeMapper" as STM
participant ":SensorService" as SS
participant ":SensorFactory" as SF
participant ":SensorRepository" as SR
participant "sensor : Sensor" as S




[o-> C : getListOfSensorTypes()
activate C
C -> STS : getListOfSensorTypes()
activate STS
STS -> STR : findAll()
activate STR
STR --> STS : listOfSensorTypes
deactivate STR
STS -> STS : cloneListOfSensorTypes()
STS --> C : clonedListOfSensorTypes
deactivate STS
C -> STM : domainToDTO(clonedListOfSensorTypes)
activate STM
loop for each sensorType in clonedListOfSensorTypes
    STM -> STM : SensorTypeDTO = domainToDTO(sensorType)
    activate STM
    deactivate STM
    STM -> STM : sensorTypeDTOList.add(SensorTypeDTO)
    activate STM
    deactivate STM
end
STM --> C : sensorTypeDTOList
deactivate STM
[o<-- C : sensorTypeDTOList
[o-> C : addSensorToDevice(deviceDTO, sensorDTO, sensorTypeDTO)
C -> DM : createDeviceIDVO(deviceDTO)
activate DM
DM --> C : deviceIDVO
deactivate DM
C -> DS : isActive(deviceIDVO)
activate DS
DS -> DR : findByID(deviceIDVO)
activate DR
DR --> DS : device
deactivate DR
DS -> DS : isActive(device)
activate DS
deactivate DS
DS --> C : true
deactivate DS
C -> SM : createSensorNameVO(sensorDTO)
activate SM
SM --> C : sensorNameVO
deactivate SM
C -> STM : createSensorTypeIDVO(sensorTypeDTO)
activate STM
STM --> C : sensorTypeIDVO
deactivate STM
C -> STS : sensorTypeExists(sensorTypeIDVO)
activate STS
STS -> STR : isPresent(sensorTypeIDVO)
activate STR
STR --> STS : true
deactivate STR
STS --> C : true
deactivate STS
deactivate STM
C -> SS : createSensor(sensorNameVO, deviceIDVO, sensorTypeIDVO)
activate SS
SS -> SF : createSensor(sensorNameVO, deviceIDVO, sensorTypeIDVO)
activate SF
SF -> S** : create(sensorNameVO, deviceIDVO, sensorTypeIDVO)
SF --> SS : sensor
deactivate SF
SS --> C : sensor
deactivate SS
C -> SS : save(sensor)
activate SS
SS -> SR : save(sensor)
activate SR
SR --> SS : true
deactivate SR
SS --> C : true
deactivate SS
[o<-- C : true
deactivate C
@enduml