@startuml

title User Story 07 - Main Success Scenario
autonumber
!theme cerulean

participant ":AddSensorToDeviceCTRL" as C
participant ":CommonListOfRooms" as CU
participant ":CommonListOfDevices" as CD
participant "device:Device" as D
participant ":listOfSensors" as LS
participant "sensorCatalogue" as SC
participant "sensor:Sensor" as S



[o-> C : getListOfRooms()
activate C
C -> CU : getListOfRooms()
activate CU
CU -> CU : refreshMap()
activate CU
deactivate CU
CU -> CU : truncateList(roomDTOAndRoomMap)
activate CU
deactivate CU
CU --> C : roomDtoList
deactivate CU
[o<-- C : roomDtoList
deactivate C
[o-> C : getListOfDevices(roomName)
activate C
C -> CU: getRoomByName(roomName)
activate CU
CU -> CU : refreshMap()
activate CU
deactivate CU
CU --> C : room
deactivate CU
C -> CD : getListOfDevices(room)
activate CD
CD -> CD : refreshMap(room)
activate CD
deactivate CD
CD -> CD : truncateList(deviceDTOAndDeviceMap)
activate CD
deactivate CD
CD --> C : dtoDeviceList
deactivate CD
[o<-- C : dtoDeviceList
deactivate C

[o->C : addSensorToDevice(sensorName,sensorType, deviceName, externalServices)
activate C
C -> C : refreshMap(room)
activate C
deactivate C
C -> D : addSensor(sensorName, sensorType, catalogue,externalServices)
activate D
D -> LS : addSensor(sensorName,sensorType, catalogue, externalServices)
activate LS
LS -> LS : isSensorInList(sensorName)
activate LS
deactivate LS
LS -> LS : findSensor(sensorName)
activate LS
deactivate LS
LS -> SC : createSensor(sensorName, sensorType, externalServices)
activate SC
SC -> S** : <create Sensor>
SC --> LS : newSensor
deactivate SC
LS -> LS : add(newSensor)
activate LS
deactivate LS
LS --> D : return true
deactivate LS
D --> C : return true
deactivate D
[o<-- C : return true
deactivate C
@enduml