Add Room Class Diagram

@startuml

title <size: 30> Add Room Class Diagram
note "<b>Only methods related to the\n<b>Use Case are represented" as N1
skinparam linetype ortho

interface Repository <T> {
    + save(entity : T) : boolean
    + findAll() : Iterable<T>
    + findById(id : ID) : Optional<T>
    + isPresent(id : ID) : boolean
}

interface HouseRepository {
    + getFirstHouseIDVO() : HouseIDVO;
}

interface RoomRepository {
}

interface RoomService{
    + addRoom (roomName : RoomNameVO, roomFloor : RoomFloorVO, \nroomDimensions : RoomDimensionsVO) : boolean
    + findAll() : List<Room>
}

class RoomMapper {
    + createRoomNameVO(roomDTO : RoomDTO) : RoomNameVO
    + createRoomFloorVO(roomDTO : RoomDTO) : RoomFloorVO
    + createRoomDimensionsVO(roomDTO : RoomsDTO) : RoomDimensionsVO
}


class AddRoomCTRL {
    - roomService : RoomService
    + addRoom(roomDTO : RoomDTO) : boolean
}

class RoomServiceImpl {
    - roomRepository : RoomRepository;
    - roomFactory : RoomFactory;
    - houseRepository : HouseRepository;
    + addRoom (roomName : RoomNameVO, roomFloor : RoomFloorVO, \nroomDimensions : RoomDimensionsVO) : boolean
}

class Room {
    - houseID: HouseIDVO
    - roomName: RoomNameVO
    - room ID: RoomIDVO
    - roomFloor : RoomFloorVO
    - dimensions : RoomDimensionsVO
}

class RoomDimensionsVO{
     - roomWidth : RoomWidth
     - roomLength : RoomLength
     - roomHeight : RoomHeight
}

class RoomWidthVO{
     - roomWidth : double
}

class RoomLengthVO{
     - roomLength : double
}

class RoomHeightVO{
     - roomHeight : double
}

class RoomIDVO{
     - roomID : int
}

class RoomNameVO{
     - roomName : String
}

class RoomFloorVO{
     - roomFloor : int
}

class HouseIDVO{
     - houseID : int
}
class HouseRepositoryMem{
    - data : LinkedHashMap<HouseIDVO, House>
    + getFirstHouse() : House
}

class RoomFactoryImpl{
    + createRoom (roomName : RoomNameVO, roomFloor : RoomFloorVO, \nroomDimensions : RoomDimensionsVO, houseID : House IDVO) : Room
}

interface RoomFactory {
    + createRoom (roomName : RoomNameVO, roomFloor : RoomFloorVO, \nroomDimensions : RoomDimensionsVO, houseID : House IDVO) : Room
}
class RoomRepositoryMem{
    + data : LinkedHashMap<RoomIDVO, Room>
    + save(room : Room ) : boolean
}

class HouseRepositoryJPA {
- houseFactory : HouseFactory
- entityManagerFactory : EntityManagerFactory
+ getFirstHouse() : House
}

class RoomRepositoryJPA {
- roomFactory : RoomFactory
- entityManagerFactory : EntityManagerFactory
+ save(room : Room) : boolean
}

class RoomDataModel {
}

class RoomAssembler {
}

AddRoomCTRL ..left> RoomMapper
AddRoomCTRL ..> RoomServiceImpl
RoomServiceImpl ..down> RoomFactoryImpl
RoomServiceImpl ..down> HouseRepository
RoomServiceImpl ..right> RoomRepository
RoomFactoryImpl ..right> Room
RoomFactoryImpl ..|> RoomFactory
HouseRepository <|.left HouseRepositoryMem
RoomRepository <|.down RoomRepositoryMem
HouseRepository --|> Repository
RoomRepository --|> Repository
RoomServiceImpl ..left|> RoomService
HouseRepository <|.. HouseRepositoryJPA
RoomRepository <|..down RoomRepositoryJPA
RoomRepositoryJPA ..> RoomAssembler
RoomRepositoryJPA -> RoomDataModel : create >

' Aggregation relationships
Room "1" *--down "1" RoomNameVO
Room "1" *--down "1" RoomIDVO
Room "1" *--right "1" RoomFloorVO
Room "1" *--down "1" RoomDimensionsVO
Room "*" *--up "1" HouseIDVO
RoomDimensionsVO "1" *-- "1" RoomLengthVO
RoomDimensionsVO "1" *-- "1" RoomWidthVO
RoomDimensionsVO "1" *-- "1" RoomHeightVO

@enduml