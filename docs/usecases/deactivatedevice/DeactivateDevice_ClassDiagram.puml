@startuml
title <size: 30> Use case Deactivate Device - v5.3
note "<b>Only methods related to\n<b>use case Deactivate Device are represented" as N1
skinparam linetype ortho

class DeactivateDeviceCTRL {
    - deviceService : DeviceServiceImpl
    + DeactivateDeviceCTRL(DeviceService)
    + deactivateDevice(DeviceDTO) : boolean
}

class DeviceDTOMapper {
    + DeviceDTOMapper()
    + getDeviceIDVO(DeviceDTO) : DeviceIDVO
}

class DeviceDTO{
- String deviceID
- String deviceName
- String deviceModel
- String deviceStatus
- String roomID

+ DeviceDTO(Device)
+ getDeviceID() : String
+ getDeviceName() : String
+ getDeviceModel() : String
+ getDeviceStatus() : String
+ getDeviceRoomID() : String
}

interface DomainID{
    + getID() : String
}

class DeviceIDVO {
    + DeviceIDVO(String)
}

class DeviceRepositoryMem {
     - DATA : Map<DeviceIDVO, Device>

     + save(device : Device) : boolean
     + findAll() : Iterable<Device>
     + findByID(ID : DeviceIDVO) : Device
     + isPresent(deviceID : DeviceIDVO) : boolean
     - validEntity(device : Device) : boolean
}

class DeviceRepositoryJPA {
    - deviceFactory : DeviceFactory
    - entityManagerFactory : EntityManagerFactory
    + save (device : Device) : boolean
    + findAll () : Iterable<Device>
    - getDataModelFromId (deviceIDVO : DeviceIDVO) : Optional <DeviceDataModel>
    + findByID (id : DeviceIDVO) : Device
    + isPresent (id : DeviceIDVO) : boolean
    + updateDevice (device : Device) : boolean
    - isNull (object : Object) : boolean
    - getDeviceDataModelFromDeviceId (em : EntityManager, id : DeviceIDVO) : Optional<DeviceDataModel>
}
interface IDeviceRepositorySpringData {

}

class DeviceRepositorySpringData {
    - deviceFactory : DeviceFactory
    - deviceRepository : IDeviceRepositorySpringData
    + DeviceRepositorySpringData(deviceFactory : DeviceFactory,deviceRepository : IDeviceRepositorySpringData)
    + save(ent : Device) : boolean
    + findAll() : Iterable<Device>
    + findById(id : DeviceIDVO) : Device
    + findByRoomID (roomID : RoomIDVO) : List<Device>
    + isPresent(id : DeviceIDVO) : boolean
    + update (device : Device) : boolean
    - isNull (object : Object) : boolean
}

class DeviceDataModel {
    - deviceID : String
    - deviceName : String
    - deviceModel : String
    - deviceStatus : String
    - roomIDVO : RoomIDVO
    + DeviceDataModel (device : Device) : DeviceDataModel
    + updateFromDomain (device : Device) : boolean
    + getDeviceID() : String
    + getDeviceName() : String
    + getDeviceModel() : String
    + getDeviceStatus() : String
    + getRoomIDVO() : RoomIDVO

}

class DeviceAssembler {
    + toDomain(deviceFactory : DeviceFactory, deviceDataModel : DeviceDataModel) : Device
    + toDomainList(deviceFactory : DeviceFactory, deviceDataModelList : List<DeviceDataModel>) : List<Device>
}

interface DeviceService {
    + deactivateDevice(DeviceIDVO) : Optional<Device>
}

class DeviceServiceImpl {
    - roomRepository : RoomRepository
    - deviceRepository : DeviceRepository
    - deviceFactory : DeviceFactory

    + DeviceServiceImpl(deviceRepository : DeviceRepository, deviceFactory : DeviceFactory)
    + deactivateDevice(deviceID : DeviceIDVO) : Optional<Device>
}


interface Repository<ID extends DomainID, T extends DomainEntity> {
    + findAll() : List<T>
    + findByID(id : ID) : T
    + isPresent(id : ID) : boolean
    + save(ent : T) : boolean
}

interface DeviceRepository<DeviceIDVO, Device> {
    + findByRoomID(roomID : RoomIDVO) : List<Device>

}

interface ValueObject<T> {
     + getValue() : T
}

class DeviceStatusVO {
    - status : boolean
    + DeviceStatusVO(status : boolean)
    + getValue() : Boolean

}

interface AggregateRoot {
     + getId() : DomainID
}

class Device {
   - deviceID : DeviceIDVO
   - roomID : RoomIDVO
   - deviceName : DeviceNameVO
   - model : DeviceModelVO
   - deviceState : DeviceStatusVO
   + Device(roomID : RoomIDVO, deviceName : DeviceNameVO, model : DeviceModelVO)
   + deactivateDevice() : boolean
   + isActive() : boolean
}



DeactivateDeviceCTRL ..> DeviceService
DeactivateDeviceCTRL ..> DeviceDTOMapper
DeviceServiceImpl ..> DeviceRepositoryMem

DeviceDTOMapper ..> DeviceDTO

DomainID <|..up DeviceIDVO

DeviceRepository o-- Device
Repository <|.. DeviceRepository
DeviceRepository <|.. DeviceRepositoryMem
DeviceRepository <|.. DeviceRepositoryJPA
DeviceRepositoryJPA ..> DeviceAssembler
DeviceRepositoryJPA -> DeviceDataModel : create >
DeviceRepositorySpringData --.|> DeviceRepository
DeviceRepositorySpringData ..> IDeviceRepositorySpringData
DeviceRepositorySpringData -> DeviceDataModel : create >

Device ..up|> AggregateRoot

Device *-- DeviceIDVO
Device *-- DeviceStatusVO
DeviceService <|.. DeviceServiceImpl


ValueObject <|..up DeviceStatusVO

@enduml
