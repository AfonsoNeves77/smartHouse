@startuml
title <size: 30> Use Case: Get List of Sensor Types v5.0
note "<b>Only methods related to 'get list of sensor types'\n<b> use case are represented" as N1
skinparam linetype ortho

GetListOfSensorTypesCTRL ..> SensorTypeServiceImpl
GetListOfSensorTypesCTRL ..> SensorTypeMapper
SensorTypeServiceImpl ..> SensorTypeRepositoryMem
SensorTypeServiceImpl ..up|> SensorTypeService
SensorTypeRepositoryMem ..|> SensorTypeRepository
SensorTypeRepository --|> Repository
SensorTypeMapper ..> SensorTypeDTO

class GetListOfSensorTypesCTRL {
    - sensorTypeService: SensorTypeService
    +GetListOfSensorTypesCTRL(sensorTypeService: SensorTypeService)
    +getListOfSensorTypes(): List<SensorTypeDTO>
}

class SensorTypeServiceImpl {
    - sensorTypeRepository: SensorTypeRepository
    - sensorTypeFactory: SensorTypeFactory
    +SensorTypeService(sensorTypeRepository: SensorTypeRepository, sensorTypeFactory: SensorTypeFactory, path: String)
    +getListOfSensorTypes(): List<SensorType>
}

class SensorTypeRepositoryMem{
    - DATA: Map<SensorTypeIDVO, SensorType>
    + findAll(): Iterable<SensorType>
}

class SensorTypeMapper {
    +domainToDTO(sensorTypeList: List<SensorType>): List<SensorTypeDTO>
}

interface SensorTypeService {
    + getListOfSensorTypes(): List<SensorType>
}

interface SensorTypeRepository {}

interface Repository {
    + findAll() : List<T>
    + findByID(id : ID) : T
    + isPresent(id : ID) : boolean
    + save(ent : T) : boolean
}

class SensorTypeDTO {
    - sensorTypeID: String
    - unit: String
    +SensorTypeDTO(sensorTypeID: String, unit: String)
}

@enduml