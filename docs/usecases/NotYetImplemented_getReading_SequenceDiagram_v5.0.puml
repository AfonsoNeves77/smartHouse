@startuml
skinparam ParticipantPadding 50
title Get reading use case (currently not implemented) - v5.0
autonumber

participant ":GetReadingService" as GRS
participant ":Sensor" as S
participant ":SimHardware" as SM
participant "value:Value" as V
participant ":LogFactory" as LF
participant "log:Log" as L
participant ":LogRepository" as LR
participant ":LogDataModel" as LDM
database ":LogRepositoryJPA" as LRJPA
participant ":LogMapper" as LM

note right of GRS: This diagram gives an overview from the authors regarding a potential \nfuture implementation of a "get reading" usecase. It illustrates the \ninteractions between the sensor obtaining a reading from an ExternalService, \nthe creation of a specific sensorValueObject, the creation of a Log Object, its \npersistence and the conversion of a Log object to a Log DTO. The illustrated \nservice is still not implemented, but most other features are already in.\nThis diagram will hopefuly be helpful in understanding the current flow of operations \nand the relationship between classes.

[o-> GRS : getReading()
activate GRS
GRS -> S : getReading()
activate S
S -> SM : getValue()
activate SM
SM --> S : str_value
deactivate SM
S -> V** : sensorValueObj = createValue (str_value)
S --> GRS : sensorValueObj
deactivate S
GRS -> LF : createLog(sensorValueObj, sensorIDVO, deviceIDVO, sensorTypeIDVO)
activate LF
LF -> L** : create log
LF --> GRS : log
deactivate LF
GRS -> LR : save(log)
activate LR
LR -> LDM : create dataModel
activate LDM
LDM --> LR : dataModel
deactivate LDM
LR -> LRJPA : save(dataModel)
activate LRJPA
LRJPA --> LR : true
deactivate LRJPA
LR --> GRS : true
deactivate LR
GRS -> LM : logDTO = domainToDTO (log)
[o<-- GRS : logDTO
deactivate GRS
@enduml